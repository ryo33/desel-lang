not = "!".
minus = "-".
and = "&".
prefix_of_set = "%".
prefix_of_element = "@".
prefix_of_inline_comment = "#".
prefix_of_comment = . // ? all UTF-8 characters excluding `@` `%` and newline characters ?.
w = . // ? whitespace character ?.
Ws = { w }.
Wws = w Ws.
newline = . // ? newline characters ?.
WsNewline = Ws ( newline | Eof ).
label_characters = . // ? printable UTF-8 encoded characters excluding '!' '-' '&' '@' '%' '(' ')' and '#' ?.
utf_characters = . // ? UTF-8 encoded characters escaped properly excluding newline characters ?.
double_quote_characters = . // ? UTF-8 encoded characters escaped properly excluding newline characters and double quote ?.
single_quote_characters = . // ? UTF-8 encoded characters escaped properly excluding newline characters and single quote ?.
NotWs = not Ws.
NotWws = not Wws.
OptNotWs = [ NotWs ].
OptNotWws = [ NotWws ].

Statements = { Statement }.
Statement = SetDefinition
Statement = SetDefinition
            | ElementDefinition
            | SetsDefinition
            | ElementsDefinition
            | Comment.

Expression = ExpressionA { Ws minus Ws ExpressionA }.
ExpressionA = ExpressionB { Ws and Ws ExpressionB }.
ExpressionB = SetWithPrefixAndOptNot
            | OptNotWs WrappedExpression.
WrappedExpression = Ws "(" Ws Expression { Wws Expression } Ws ")".

SetDefinition = SetWithPrefix [ HomonymousElement ]
                { Wws SetDefinitionItem } InlineComment WsNewline
                { AdditionalSetDefinition InlineComment WsNewline | Comment }.
AdditionalSetDefinition = prefix_of_set { Wws SetDefinitionItem }.
SetDefinitionItem = ElementWithOptNot HomonymousSet
                  | Expression.

ElementDefinition = ElementWithPrefix [ HomonymousSet ]
                    { Wws ElementDefinitionItem } InlineComment WsNewline
                    { AdditionalElementDefinition InlineComment WsNewline | Comment }.
AdditionalElementDefinition = prefix_of_element { Wws ElementDefinitionItem }.
ElementDefinitionItem = SetWithOptNot.

SetsDefinition = prefix_of_set prefix_of_set
                 { Wws SetsDefinitionItem }
                 InlineComment WsNewline.
SetsDefinitionItem = SetWithPrefix [ HomonymousElement ]
                     { OptNotWs WrappedExpression | ElementWithOptNot [ HomonymousSet ] }.

ElementsDefinition = prefix_of_element prefix_of_element
                     { Wws ElementsDefinitionItem }
                     InlineComment WsNewline.
ElementsDefinitionItem = ElementWithPrefix [ HomonymousSet ]
                         { Wws SetWithOptNot }.

HomonymousSet = Ws prefix_of_set.
HomonymousElement = Ws prefix_of_element.

Set = [ prefix_of_set ] Label.
Element = [ prefix_of_element ] Label.
SetWithPrefix = prefix_of_set Label.
ElementWithPrefix = prefix_of_element Label.
SetWithOptNot = SetWithPrefixAndOptNot
              | LabelWithOptNot.
SetWithPrefixAndOptNot = OptNotWs ElementWithPrefix.
ElementWithOptNot = ElementWithPrefixAndOptNot
                  | LabelWithOptNot.
ElementWithPrefixAndOptNot = OptNotWs ElementWithPrefix.
LabelWithOptNot = OptNotWs WrappedLabel
                | OptNotWws Label.
Label = label_characters | WrappedLabel.
WrappedLabel = "\"" double_quote_characters "\""
             | "'" single_quote_characters "'".
InlineComment = Ws [ prefix_of_inline_comment utf_characters ].
Comment = WsNewline
        | prefix_of_comment { utf_characters } WsNewline.
